<?xml version="1.0" encoding="UTF-8"?>

<configuration status="OFF">
    <!--先定义所有的appender-->
    <properties>
        <Property name="LOG_NAME">${sys:user.home}/Blog/logs</Property>
    </properties>
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss z} [%-5level] %class{36} %L %M - %msg%xEx%n"/>
        </Console>
        <RollingFile name="RollingFileInfo" fileName="${LOG_NAME}/info.log"
                     filePattern="${LOG_NAME}/info_%d{yyyy-MM-dd}.log" >
            <!-- 输出格式 -->
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} [%-5level] %class{36} %L %M - %msg%xEx%n" />
            <Policies>
                <!-- 每1天更新一次，此处查阅网上和官方示例中，都是以小时出现，我测试是以天为单位。（官方文档中说明按item类型是否是小时，但没找到在哪里设置item类型）另有其他各类型策略，请参阅官方文档 -->
                <TimeBasedTriggeringPolicy modulate="true"
                                           interval="1" />
                <!-- 此处为每个文件大小策略限制，使用它一般会在文件中filePattern采用%i模式 -->
                <!-- <SizeBasedTriggeringPolicy size="128KB" /> -->
            </Policies>
            <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
            <!-- DefaultRolloverStrategy字段中加入max=“30”经测试是配合SizeBasedTriggeringPolicy限制%i的存在数量，并没有发现是网上流传的是最多保存多少个文件的限制，也或许是我写的有问题 -->
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_NAME}" maxDepth="1">
                    <IfFileName glob="info_*.log" />
                    <IfLastModified age="30d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="RollingFileError" fileName="${LOG_NAME}/error.log"
                     filePattern="${LOG_NAME}/error_%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} [%-5level] %class{36} %L %M - %msg%xEx%n" />
            <Policies>
                <!-- 每1天更新一次，此处查阅网上和官方示例中，都是以小时出现，我测试是以天为单位。（官方文档中说明按item类型是否是小时，但没找到在哪里设置item类型）另有其他各类型策略，请参阅官方文档 -->
                <TimeBasedTriggeringPolicy modulate="true"
                                           interval="1" />
                <!-- 此处为每个文件大小策略限制，使用它一般会在文件中filePattern采用%i模式 -->
                <!-- <SizeBasedTriggeringPolicy size="128KB" /> -->
            </Policies>
            <!-- 最多备份30天以内的日志，此处为策略限制，Delete中可以按自己需要用正则表达式编写 -->
            <!-- DefaultRolloverStrategy字段中加入max=“30”经测试是配合SizeBasedTriggeringPolicy限制%i的存在数量，并没有发现是网上流传的是最多保存多少个文件的限制，也或许是我写的有问题 -->
            <DefaultRolloverStrategy>
                <Delete basePath="${LOG_NAME}" maxDepth="1">
                    <IfFileName glob="info_*.log" />
                    <IfLastModified age="30d" />
                </Delete>
            </DefaultRolloverStrategy>
            <!--<PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} [%-5level] %class{36} %L %M - %msg%xEx%n"/>-->
            <!--<SizeBasedTriggeringPolicy size="50MB"/>-->
            <!--<DefaultRolloverStrategy max="20" />-->
        </RollingFile>
        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <!--<RollingFile name="RollingFile" fileName="${LOG_NAME}/app.log"-->
        <!--filePattern="log/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz">-->
        <!--<PatternLayout pattern="%d{yyyy-MM-dd  HH:mm:ss z} [%-5level] %class{36} %L %M - %msg%xEx%n"/>-->
        <!--<SizeBasedTriggeringPolicy size="50MB"/>-->
        <!--<DefaultRolloverStrategy max="20" />-->
        <!--</RollingFile>-->
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--建立一个默认的root的logger-->
        <root level="trace">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileError"/>
            <appender-ref ref="RollingFileInfo"/>
        </root>

    </loggers>
</configuration>